#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 310, xend = 300, y = 300, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 165, y = 80, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 290, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 290, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 306, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 306, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 250, y = 350, label = 'Sugars and\nFatty Acids', size = 7, color = 'white') +
geom_segment(aes(x = 370, xend = 280, y = 350, yend = 350), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 306, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 220, y = 380, label = 'Sugars and\nFatty Acids', size = 7, color = 'white') +
geom_segment(aes(x = 370, xend = 260, y = 350, yend = 350), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 306, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 210, y = 380, label = 'Sugars and\nFatty Acids', size = 7, color = 'white') +
geom_segment(aes(x = 370, xend = 260, y = 380, yend = 380), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 306, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 210, y = 380, label = 'Sugars and\nFatty Acids', size = 7, color = 'white') +
geom_segment(aes(x = 370, xend = 260, y = 380, yend = 380), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 4.5)
library(tidyverse)
library(ggrepel)
theme_tomas <- function(base_size = 15, base_family = "sans"){
theme_light(base_size = base_size, base_family = base_family) %+replace%
theme(
plot.title = element_text(color = 'black', hjust = 0, size = base_size, vjust = 0, margin = margin(0,0,0.4,0, 'cm')),
plot.subtitle = element_text(color = 'black',size = base_size, hjust = 0),
axis.title = element_text(color = 'black', size = base_size),
axis.text = element_text(color = rgb(105, 105, 105, maxColorValue = 255),size = base_size),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(color = 'white'),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 0.1),
# for facets
strip.text.x = element_text(size = base_size, colour = "black", margin = margin(0.05,0.05,0.05,0.05,'cm')),
strip.background =element_rect(fill="gray90", color = 'gray85', linetype = NULL),
complete = TRUE
)
}
# file reading
male_metrics <- read_csv('../results/Age_prediction/age_male_metrics.csv')
male_metrics <- male_metrics %>% select(-X1)
male_metrics
female_metrics <- read_csv('../results/Age_prediction/age_female_metrics.csv')
female_metrics <- female_metrics %>% select(-X1)
# Taking square root of mse, so that it is on the same scale as mae
(male_metrics <- male_metrics %>%
mutate(Test_error = ifelse(Metric == 'mse', sqrt(Test_error), Test_error),
CV = ifelse(Metric == 'mse', sqrt(CV), CV),
Metric = ifelse(Metric == 'mse', 'rmse', Metric))
)
female_metrics <- female_metrics %>%
mutate(Test_error = ifelse(Metric == 'mse', sqrt(Test_error), Test_error),
CV = ifelse(Metric == 'mse', sqrt(CV), CV),
Metric = ifelse(Metric == 'mse', 'rmse', Metric))
(male_metrics_summary <- male_metrics %>%
group_by(Metric, Model) %>%
summarise(Mean_TE = mean(Test_error),
Mean_CV = mean(CV),
SE_TE = sd(Test_error)/sqrt(20),
SE_CV = sd(CV)/sqrt(20))
)
female_metrics_summary <- female_metrics %>%
group_by(Metric, Model) %>%
summarise(Mean_TE = mean(Test_error),
Mean_CV = mean(CV),
SE_TE = sd(Test_error)/sqrt(20),
SE_CV = sd(CV)/sqrt(20))
# renaming the Metrics
newm = c()
for(m in male_metrics_summary$Metric){
if(m == 'r2'){
newm <- c(newm, 'R^2')
}
else if(m == 'rmse'){
newm <- c(newm, 'Root Mean Squared Error')
}
else if(m == 'mae'){
newm <- c(newm, 'Mean Absolute Error')
}
}
male_metrics_summary <- male_metrics_summary %>%
ungroup() %>%
mutate(Metric = newm)
female_metrics_summary <- female_metrics_summary %>%
ungroup() %>%
mutate(Metric = newm)
# creating factors from the metric column
male_metrics_summary$Metric <- factor(male_metrics_summary$Metric, levels = c('Root Mean Squared Error',
'Mean Absolute Error',
'R^2'))
female_metrics_summary$Metric <- factor(female_metrics_summary$Metric, levels = c('Root Mean Squared Error',
'Mean Absolute Error',
'R^2'))
# renaming Lasso and Ridge Models
male_metrics_summary <- male_metrics_summary %>%
mutate(Model = ifelse(Model == 'L', 'Lasso', ifelse(Model == 'R', 'Ridge', Model)))
female_metrics_summary <- female_metrics_summary %>%
mutate(Model = ifelse(Model == 'L', 'Lasso', ifelse(Model == 'R', 'Ridge', Model)))
male_metrics_summary %>%
ggplot(aes(Mean_CV, Mean_TE, color = Model)) +
geom_abline(slope = 1, linetype = 2, alpha = 0.5) +
geom_point(size = 4, alpha = 0.5) +
geom_errorbar(aes(ymin = Mean_TE - SE_TE, ymax = Mean_TE + SE_TE, width = Mean_TE/30)) +
geom_errorbarh(aes(xmin = Mean_CV - SE_CV, xmax = Mean_CV + SE_CV, height = Mean_CV/30)) +
facet_wrap(~Metric, scales = 'free') +
theme_tomas() +
labs(title = 'Male', y = 'Test Error', x = 'CV Error') +
theme(legend.position = 'bottom') +
scale_color_discrete(guide = guide_legend(nrow = 1))
#ggsave('Age_prediction/male_metrics_v1.png', width = 12, height = 4)
female_metrics_summary %>%
ggplot(aes(Mean_CV, Mean_TE, color = Model)) +
geom_abline(slope = 1, linetype = 2, alpha = 0.5) +
geom_point(size = 4, alpha = 0.5) +
geom_errorbar(aes(ymin = Mean_TE - SE_TE, ymax = Mean_TE + SE_TE, width = Mean_TE/30)) +
geom_errorbarh(aes(xmin = Mean_CV - SE_CV, xmax = Mean_CV + SE_CV, height = Mean_CV/30)) +
facet_wrap(~Metric, scales = 'free') +
theme_tomas() +
labs(title = 'Female', y = 'Test Error', x = 'CV Error') +
theme(legend.position = 'bottom') +
scale_color_discrete(guide = guide_legend(nrow = 1))
#ggsave('Age_prediction/female_metrics_v1.png', width = 12, height = 4)
library(dplyr)
metric_plot <- function(df, dfsum, metric, title, xlab, ylab, co = NULL){
xmin = min(dplyr::filter(male_metrics, Metric == metric)$CV, dplyr::filter(female_metrics, Metric == metric)$CV)
xmax = max(dplyr::filter(male_metrics, Metric == metric)$CV, dplyr::filter(female_metrics, Metric == metric)$CV)
ymin = min(dplyr::filter(male_metrics, Metric == metric)$Test_error, dplyr::filter(female_metrics, Metric == metric)$Test_error)
ymax = max(dplyr::filter(male_metrics, Metric == metric)$Test_error, dplyr::filter(female_metrics, Metric == metric)$Test_error)
if(is.null(co)){
df %>%
dplyr::filter(Metric == metric) %>%
ggplot(aes(CV, Test_error, color = Model)) +
geom_label_repel(data = dfsum %>% dplyr::filter(Metric == metric), aes(x = Mean_CV, y = Mean_TE, label = Model), size = 5, alpha = 1) +
geom_abline(slope = 1, linetype = 2, alpha = 0.5) +
geom_point() +
theme_tomas(base_size = 15) +
theme(legend.position = 'none', plot.title = element_text(size = 20),
axis.line = element_line(size = 1, color = 'black'),
axis.ticks = element_line(size = 1, color = 'black'),
axis.text = element_text(color = 'black')) +
labs(title = title, y = ylab, x = xlab) +
xlim(xmin, xmax) + ylim(ymin, ymax)
}
else{
df %>%
dplyr::filter(Metric == metric) %>%
ggplot(aes(CV, Test_error, color = Model)) +
geom_label_repel(data = dfsum %>% dplyr::filter(Metric == metric), aes(x = Mean_CV, y = Mean_TE, label = Model), size = 5, alpha = 1, fill = co[1], color = co[2]) +
geom_abline(slope = 1, linetype = 2, alpha = 0.5, color = co[2]) +
geom_point() +
theme_tomas(base_size = 15) +
theme(legend.position = 'none', plot.title = element_text(size = 20),
plot.background = element_rect(fill = co[1], color = co[1]),
panel.background = element_rect(fill = co[1], color = co[1]),
axis.line = element_line(color = co[2], size = 1),
axis.ticks = element_line(size = 1, color = co[2]),
axis.text = element_text(color = co[2]),
axis.title = element_text(color = co[2])) +
labs(title = title, y = ylab, x = xlab) +
xlim(xmin, xmax) + ylim(ymin, ymax)
}
}
male_metrics_plot = gridExtra::grid.arrange(
metric_plot(male_metrics, male_metrics_summary, 'rmse', 'Male', 'CV RMSE', 'Test RMSE'),
metric_plot(male_metrics, male_metrics_summary, 'mae', '', 'CV MAE', 'Test MAE'),
metric_plot(male_metrics, male_metrics_summary, 'r2', '',
expression(paste('CV ', R^2)), expression(paste('Test ', R^2))), nrow = 1
)
#ggsave('Age_prediction/male_metrics_scales.png', male_metrics_plot, width = 12, height = 4.5)
male_metrics_summary <- male_metrics %>%
group_by(Metric, Model) %>%
summarise(Mean_TE = mean(Test_error),
Mean_CV = mean(CV),
SE_TE = sd(Test_error)/sqrt(20),
SE_CV = sd(CV)/sqrt(20))
female_metrics_summary <- female_metrics %>%
group_by(Metric, Model) %>%
summarise(Mean_TE = mean(Test_error),
Mean_CV = mean(CV),
SE_TE = sd(Test_error)/sqrt(20),
SE_CV = sd(CV)/sqrt(20))
male_metrics_summary <- male_metrics_summary %>%
mutate(Model = ifelse(Model == 'L', 'Lasso', ifelse(Model == 'R', 'Ridge', Model)))
female_metrics_summary <- female_metrics_summary %>%
mutate(Model = ifelse(Model == 'L', 'Lasso', ifelse(Model == 'R', 'Ridge', Model)))
male_metrics_plot = gridExtra::grid.arrange(
metric_plot(male_metrics, male_metrics_summary, 'rmse', 'Male', 'CV RMSE', 'Test RMSE'),
metric_plot(male_metrics, male_metrics_summary, 'mae', '', 'CV MAE', 'Test MAE'),
metric_plot(male_metrics, male_metrics_summary, 'r2', '',
expression(paste('CV ', R^2)), expression(paste('Test ', R^2))), nrow = 1
)
#ggsave('Age_prediction/male_metrics_scales.png', male_metrics_plot, width = 12, height = 4.5)
female_metrics_plot = gridExtra::grid.arrange(
metric_plot(female_metrics, female_metrics_summary, 'rmse', 'Female', 'CV RMSE', 'Test RMSE'),
metric_plot(female_metrics, female_metrics_summary, 'mae', NULL, 'CV MAE', 'Test MAE'),
metric_plot(female_metrics, female_metrics_summary, 'r2', NULL,
expression(paste('CV ', R^2)), expression(paste('Test ', R^2))), nrow = 1
)
#ggsave('Age_prediction/female_metrics_scales.png', female_metrics_plot, width = 12, height = 4.5)
male_female_metrics = gridExtra::grid.arrange(
male_metrics_plot, female_metrics_plot, nrow = 2
)
#ggsave('Age_prediction/male_female_metrics.png', male_female_metrics, width = 16, height = 9)
knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 7)
library(tidyverse)
library(ggrepel)
theme_tomas <- function(base_size = 15, base_family = "sans"){
theme_light(base_size = base_size, base_family = base_family) %+replace%
theme(
plot.title = element_text(color = 'black', hjust = 0, size = base_size, vjust = 0, margin = margin(0,0,0.4,0, 'cm')),
plot.subtitle = element_text(color = 'black',size = base_size, hjust = 0),
#axis.title = element_text(color = 'black', size = 14),
#axis.text = element_text(color = rgb(105, 105, 105, maxColorValue = 255),size = 14),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(color = 'white'),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 0.1),
# for facets
strip.text.x = element_text(size = base_size, colour = "black", margin = margin(0.05,0.05,0.05,0.05,'cm')),
strip.background =element_rect(fill="gray90", color = 'gray85', linetype = NULL),
complete = TRUE
)
}
# reading files
sex_metrics = read_csv('../results/Sex_prediction/sex_metrics.csv')
sex_metrics <- sex_metrics %>% select(-X1)
sex_metrics
(sex_metrics_summary <- sex_metrics %>%
group_by(Metric, Model) %>%
summarise(Mean_TE = mean(Test_error),
Mean_CV = mean(CV),
SE_TE = sd(Test_error)/sqrt(20),
SE_CV = sd(CV)/sqrt(20))
)
# renaming metrics
newm = c()
for(m in sex_metrics_summary$Metric){
if(m == 'accuracy'){
newm <- c(newm, 'Accuracy')
}
else if(m == 'f1'){
newm <- c(newm, 'F1 score')
}
else if(m == 'matthews_corrcoef'){
newm <- c(newm, 'Matthews Corr. Coefficient')
}
else if(m == 'precision'){
newm <- c(newm, 'Precision')
}
else if(m == 'recall'){
newm <- c(newm, 'Recall')
}
else if(m == 'roc_auc'){
newm <- c(newm, 'ROC-AUC')
}
}
sex_metrics_summary <- sex_metrics_summary %>%
ungroup() %>%
mutate(Metric = newm)
(sex_metrics_summary <- sex_metrics_summary %>%
ungroup() %>%
mutate(Metric = newm))
sex_metrics_summary %>%
ggplot(aes(Mean_CV, Mean_TE, color = Model)) +
geom_abline(slope = 1, linetype = 2, alpha = 0.5) +
geom_point() +
geom_errorbar(aes(ymin = Mean_TE - SE_TE, ymax = Mean_TE + SE_TE), width = 0.005) +
geom_errorbarh(aes(xmin = Mean_CV - SE_CV, xmax = Mean_CV + SE_CV), height = 0.01) +
ylim(NA, 1) +
facet_wrap(~Metric, scales = 'free') +
theme_tomas() +
labs(y = 'Test Error', x = 'CV Error') +
theme(legend.position = 'bottom') +
scale_color_discrete(guide = guide_legend(nrow = 2))
#ggsave('Sex_prediction/metrics_sex_errors.png', width = 12, height = 7)
# renaming Model names
(model_wrong = unique(sex_metrics_summary$Model))
model_right = c('AdaBoost', 'Gr.Boost', 'KNN', 'LDA', 'Log.Reg.', 'PCA-LDA', 'PCA-QDA', 'QDA', 'RandomForest', 'SVM', 'XGBoost')
rightmodelnames = c()
for(i in sex_metrics_summary$Model){
rightmodelnames <- c(rightmodelnames, model_right[which(model_wrong == i)])
}
rightmodelnames
sex_metrics_summary %>%
mutate(Model = rightmodelnames) %>%
mutate(Metric = ifelse(Metric == 'Matthews Corr. Coefficient', 'Matthews Corr.\nCoefficient', Metric)) %>%
ggplot(aes(Mean_CV, Mean_TE, color = Model, shape = Metric)) +
geom_abline(slope = 1, alpha = 0.2, linetype = 2) +
geom_point(size = 4, alpha = 0.7) +
facet_wrap(~Model, nrow = 2) +
#theme_classic() +
theme_tomas() +
scale_color_discrete(guide = FALSE) +
theme(legend.position = c(0.92, 0.25),
strip.background = element_rect(fill = NA, color = 'white'),
panel.grid.major.x = element_line(color = 'grey90', linetype = 2),
panel.grid.major.y = element_line(color = 'grey90', linetype = 2)) +
labs(shape = '', y = 'Mean Test error', x = 'Mean CV error') #+
#scale_shape_discrete(guide = guide_legend(nrow = 1))
#ggsave('Sex_prediction/metric_sex_models.png', width = 12, height = 6)
library(viridis)
correlations = read_csv('../steps/corrs.csv')
correlations = correlations %>%
gather(`0`:`440`, key = Feature, value = Correlation)
correlations$Feature <- as.numeric(correlations$Feature)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 306, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 210, y = 380, label = 'Sugars and\nFatty Acids', size = 7, color = 'white') +
geom_segment(aes(x = 370, xend = 260, y = 380, yend = 380), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 7)
library(tidyverse)
library(ggrepel)
theme_tomas <- function(base_size = 15, base_family = "sans"){
theme_light(base_size = base_size, base_family = base_family) %+replace%
theme(
plot.title = element_text(color = 'black', hjust = 0, size = base_size, vjust = 0, margin = margin(0,0,0.4,0, 'cm')),
plot.subtitle = element_text(color = 'black',size = base_size, hjust = 0),
#axis.title = element_text(color = 'black', size = 14),
#axis.text = element_text(color = rgb(105, 105, 105, maxColorValue = 255),size = 14),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(color = 'white'),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 0.1),
# for facets
strip.text.x = element_text(size = base_size, colour = "black", margin = margin(0.05,0.05,0.05,0.05,'cm')),
strip.background =element_rect(fill="gray90", color = 'gray85', linetype = NULL),
complete = TRUE
)
}
library(viridis)
correlations = read_csv('../steps/corrs.csv')
correlations = correlations %>%
gather(`0`:`440`, key = Feature, value = Correlation)
correlations$Feature <- as.numeric(correlations$Feature)
correlations %>%
ggplot() +
geom_tile(aes(X1, Feature, fill = Correlation)) +
theme_tomas(base_size = 20) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis() +
labs(y = 'Feature ID', x = 'Feature ID', fill = 'Absolute\nCorrelation') +
#geom_text(aes(x = 165, y = 80, label = 'PC/SM')) +
annotate('text', x = 165, y = 80, label = 'PC/SM', size = 7, color = 'white') +
geom_segment(aes(x = 120, xend = 140, y = 80, yend = 80), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 300, y = 250, label = 'Sugars', size = 7, color = 'white') +
geom_segment(aes(x = 310, xend = 300, y = 306, yend = 270), color = 'white', arrow = arrow(length = unit(0.2, "cm"))) +
annotate('text', x = 210, y = 380, label = 'Sugars and\nFatty Acids', size = 7, color = 'white') +
geom_segment(aes(x = 370, xend = 260, y = 380, yend = 380), color = 'white', arrow = arrow(length = unit(0.2, "cm")))
#ggsave('../plots/correlations.png', width = 12, height = 10, dpi = 200)
knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 7)
library(tidyverse)
ms_metrics = read_csv('../results/MS_prediction/MS_metrics.csv')
ms_metrics <- ms_metrics %>% select(-X1)
ms_metrics
(ms_metrics_summary <- ms_metrics %>%
group_by(Metric, Model) %>%
summarise(Mean_TE = mean(Test_error),
Mean_CV = mean(CV),
SE_TE = sd(Test_error)/sqrt(20),
SE_CV = sd(CV)/sqrt(20))
)
ms_metrics_summary %>%
ggplot(aes(Mean_CV, Mean_TE, color = Model)) +
geom_abline(slope = 1, linetype = 2, alpha = 0.5) +
geom_point() +
geom_errorbar(aes(ymin = Mean_TE - SE_TE, ymax = Mean_TE + SE_TE), width = 0.005) +
geom_errorbarh(aes(xmin = Mean_CV - SE_CV, xmax = Mean_CV + SE_CV), height = 0.01) +
ylim(NA, 1) +
facet_wrap(~Metric, scales = 'free') +
theme_classic() +
labs(title = 'Metrics (Sex)', y = 'Test Error', x = 'CV Error') +
theme(legend.position = 'bottom') +
scale_color_discrete(guide = guide_legend(nrow = 1))
#ggsave('MS_prediction/metrics_ms_errors.png')
ms_metrics_summary %>%
ggplot(aes(Mean_CV, Mean_TE, color = Model, shape = Metric)) +
geom_abline(slope = 1, alpha = 0.2, linetype = 2) +
geom_point(size = 4, alpha = 0.7) +
facet_wrap(~Model, nrow = 2) +
theme_classic() +
scale_color_discrete(guide = FALSE) +
theme(legend.position = 'bottom') +
labs(shape = '', y = 'Mean Test error', x = 'Mean CV error') +
scale_shape_discrete(guide = guide_legend(nrow = 1))
#ggsave('MS_prediction/metric_ms_models.png')
